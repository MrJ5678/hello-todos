{"version":3,"sources":["components/App.js","actions/index.js","constants/index.js","reducers/index.js","index.js"],"names":["App","props","state","text","dueDate","this","className","type","value","placeholder","onChange","event","setState","target","onClick","addReminder","renderReminders","clearReminder","id","delReminder","reminders","map","reminder","key","moment","Date","fromNow","Component","connect","action","Math","random","read_cookie","bake_cookie","filter","store","createStore","rooterReducer","composeWithDevTools","applyMiddleware","logger","ReactDOM","render","document","getElementById"],"mappings":"6QAaMA,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,KAAM,GACNC,QAAS,IAJM,E,qDAQT,IAAD,OACCD,EAASE,KAAKH,MAAdC,KACR,OACE,yBAAKG,UAAU,OACb,yBAAKA,UAAU,SAAf,gBAEA,yBAAKA,UAAU,eACb,yBAAKA,UAAU,mBACb,2BACEC,KAAK,OACLC,MAAQL,EACRG,UAAU,oBACVG,YAAY,gBACZC,SAAW,SAACC,GAAD,OAAW,EAAKC,SAAS,CAACT,KAAMQ,EAAME,OAAOL,WAE1D,2BACED,KAAK,iBACLD,UAAU,eACVI,SAAW,SAACC,GAAD,OAAW,EAAKC,SAAS,CAACR,QAASO,EAAME,OAAOL,YAG/D,4BACEF,UAAU,kBACVQ,QAAU,kBAAM,EAAKC,gBAFvB,iBASAV,KAAKW,kBACP,yBACCV,UAAU,sBACVQ,QAAU,kBAAM,EAAKG,kBAFtB,qB,oCAWJZ,KAAKJ,MAAMc,YAAYV,KAAKH,MAAMC,KAAME,KAAKH,MAAME,SACnDC,KAAKO,SAAS,CACZT,KAAM,O,kCAIEe,GACVb,KAAKJ,MAAMkB,YAAYD,K,sCAIvBb,KAAKJ,MAAMgB,kB,wCAGM,IAAD,OACRG,EAAcf,KAAKJ,MAAnBmB,UACR,OACE,wBAAId,UAAU,4BAEVc,EAAUC,KAAI,SAAAC,GAAQ,OACpB,wBAAIC,IAAKD,EAASJ,GAAIZ,UAAU,mBAC9B,yBAAKA,UAAU,aACb,yBAAKA,UAAU,IAAKgB,EAASnB,MAC7B,yBAAKG,UAAU,IAAG,4BAAMkB,IAAO,IAAIC,KAAKH,EAASlB,UAAUsB,aAE7D,yBACCpB,UAAU,oBACVQ,QAAU,kBAAM,EAAKK,YAAYG,EAASJ,MAF3C,mB,GA5EIS,aAgGHC,eANS,SAAC1B,GACvB,MAAO,CACLkB,UAAWlB,KAIyB,CAAEa,YCnGf,SAACZ,EAAMC,GAChC,MAAO,CACLG,KCJwB,eDKxBJ,OACAC,YD+FmDe,YC3F5B,SAACD,GAC1B,MAAO,CACLX,KCXwB,eDYxBW,ODwFgED,cCpFvC,WAC3B,MAAO,CACLV,KCjB0B,oBFmGfqB,CAAsE5B,G,sBGlG/EsB,EAAW,SAACO,GAChB,MAAO,CACLX,GAAIY,KAAKC,SACT5B,KAAM0B,EAAO1B,KACbC,QAASyB,EAAOzB,UAwBLgB,EApBG,WAA0D,IAAzDlB,EAAwD,uDAAhD8B,sBAAY,cAAgB,GAAIH,EAAgB,uDAAP,GAC9DT,EAAY,KAChB,OAAOS,EAAOtB,MACZ,IDdwB,eCoBtB,OALAa,EAAS,sBACJlB,GADI,CAEPoB,EAASO,KAEXI,sBAAY,YAAab,GAClBA,EACT,IDpBwB,eCsBtB,OADAA,EAAalB,EAAMgC,QAAO,SAAAZ,GAAQ,OAAIA,EAASJ,KAAOW,EAAOX,MACtDE,EACT,IDtB0B,iBCwBxB,OADAA,EAAY,GACLA,EACT,QAAS,OAAOlB,I,yBChBdiC,G,MAAQC,sBACZC,EACAC,8BACEC,0BACEC,QAKNC,IAASC,OACP,kBAAC,IAAD,CAAUP,MAAQA,GAChB,kBAAC,EAAD,OAEFQ,SAASC,eAAe,W","file":"static/js/main.417bf5d0.chunk.js","sourcesContent":["/*\n * @Author: your name\n * @Date: 2020-05-11 12:53:38\n * @LastEditTime: 2020-05-12 09:38:38\n * @LastEditors: hhhhhq\n * @Description: In User Settings Edit\n * @FilePath: /reminder-review/src/components/App.js\n */\nimport React, { Component } from 'react';\nimport moment from 'moment'\nimport { addReminder, delReminder, clearReminder } from '../actions'\nimport { connect } from 'react-redux';\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      text: '',\n      dueDate: ''\n    };\n  }\n\n  render() {\n    const { text } = this.state\n    return (\n      <div className=\"App\">\n        <div className=\"title\">Reminder Pro</div>\n\n        <div className=\"form-inline\">\n          <div className=\"form-group mr-2\">\n            <input \n              type=\"text\" \n              value={ text }\n              className=\"form-control mr-2\"\n              placeholder=\"I have to ...\"\n              onChange={ (event) => this.setState({text: event.target.value})}\n            />\n            <input \n              type=\"datetime-local\"  \n              className=\"form-control\"\n              onChange={ (event) => this.setState({dueDate: event.target.value})}\n            />\n          </div>\n          <button\n            className=\"btn btn-success\"\n            onClick={ () => this.addReminder() }\n          >\n            Add Reminder\n          </button>\n        </div>\n\n        {/* 渲染todos列表 */}\n        { this.renderReminders() }\n        <div\n         className=\"btn btn-danger mt-3\"\n         onClick={ () => this.clearReminder() }\n        >\n          Clear Reminder\n        </div>\n      </div>\n    );\n  }\n\n  addReminder() {\n    this.props.addReminder(this.state.text, this.state.dueDate)\n    this.setState({\n      text: ''\n    })\n  }\n\n  delReminder(id) {\n    this.props.delReminder(id)\n  }\n\n  clearReminder() {\n    this.props.clearReminder()\n  }\n\n  renderReminders() {\n    const { reminders } = this.props\n    return (\n      <ul className=\"list-group col-sm-8 mt-2\">\n        {\n          reminders.map(reminder => (\n            <li key={reminder.id} className=\"list-group-item\">\n              <div className=\"list-item\">\n                <div className=\"\">{ reminder.text }</div>\n                <div className=\"\"><em>{ moment(new Date(reminder.dueDate)).fromNow() }</em></div>\n              </div>\n              <div\n               className=\"list-item del-btn\"\n               onClick={ () => this.delReminder(reminder.id) }\n              >\n               &#x2715;\n              </div>\n            </li>\n          ))\n        }\n      </ul>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    reminders: state\n  };\n};\n\nexport default connect(mapStateToProps, { addReminder, delReminder, clearReminder })(App);","/*\n * @Author: your name\n * @Date: 2020-05-11 13:08:36\n * @LastEditTime: 2020-05-12 09:39:01\n * @LastEditors: hhhhhq\n * @Description: In User Settings Edit\n * @FilePath: /reminder-review/src/actions/index.js\n */\nimport { ADD_REMINDER, DEL_REMINDER, CLEAR_REMINDER } from '../constants'\n\nexport const addReminder = (text, dueDate) => {\n  return {\n    type: ADD_REMINDER,\n    text,\n    dueDate\n  }\n};\n\nexport const delReminder = (id) => {\n  return {\n    type: DEL_REMINDER,\n    id\n  }\n};\n\nexport const clearReminder = () => {\n  return {\n    type: CLEAR_REMINDER,\n  }\n};","/*\n * @Author: your name\n * @Date: 2020-05-11 13:07:58\n * @LastEditTime: 2020-05-12 09:38:03\n * @LastEditors: hhhhhq\n * @Description: In User Settings Edit\n * @FilePath: /reminder-review/src/constants/index.js\n */\nexport const ADD_REMINDER = 'ADD_REMINDER'\nexport const DEL_REMINDER = 'DEL_REMINDER'\nexport const CLEAR_REMINDER = 'CLEAR_REMINDER'","/*\n * @Author: your name\n * @Date: 2020-05-11 13:04:40\n * @LastEditTime: 2020-05-12 10:03:00\n * @LastEditors: hhhhhq\n * @Description: In User Settings Edit\n * @FilePath: /reminder-review/src/reducers/index.js\n */\nimport { ADD_REMINDER, DEL_REMINDER, CLEAR_REMINDER } from '../constants'\nimport { bake_cookie, read_cookie } from 'sfcookies'\n\nconst reminder = (action) => {\n  return {\n    id: Math.random(),\n    text: action.text,\n    dueDate: action.dueDate\n  }\n}\n\nconst reminders = (state = read_cookie(\"reminders\") || [], action = {}) => {\n  let reminders = null\n  switch(action.type) {\n    case ADD_REMINDER:\n      reminders = [\n        ...state,\n        reminder(action)\n      ]\n      bake_cookie(\"reminders\", reminders)\n      return reminders\n    case DEL_REMINDER:\n      reminders =  state.filter(reminder => reminder.id !== action.id)\n      return reminders\n    case CLEAR_REMINDER:\n      reminders = []\n      return reminders\n    default: return state;\n  }\n}\n\nexport default reminders;\n","/*\n * @Author: your name\n * @Date: 2020-04-11 21:43:44\n * @LastEditTime: 2020-05-11 13:10:59\n * @LastEditors: Please set LastEditors\n * @Description: In User Settings Edit\n * @FilePath: /reminder-review/src/index.js\n */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport { createStore, applyMiddleware } from 'redux'\nimport { Provider } from 'react-redux'\nimport rooterReducer from './reducers'\nimport logger from 'redux-logger'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport './index.css';\n\nconst store = createStore(\n  rooterReducer,\n  composeWithDevTools(\n    applyMiddleware(\n      logger\n    )\n  )\n)\n\nReactDOM.render(\n  <Provider store={ store }>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}